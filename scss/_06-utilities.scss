$colors: (
    "primary": $clr-d-blue,
    "dark": $clr-darkest,
    "light": $clr-light,
    "light dark": $clr-l-dark,
    "shade dark": $clr-f-dark,

    "transparent":$transparent,
);

@each $key, $val in $colors{
    .bg{
        &--#{$key}{
            background: $val;
        }
    }

    .text{
        &--#{$key}{
            color: $val;
        }
    }

    .btn.bg--#{$key}{
        @include btn($val);
    }

    .btn2.bg--#{$key}{
        @include btn2($val);
    }

    .btn3.bg--#{$key}{
        @include btn3($val);
    }

    .btn-lb-lt.bg--#{$key}{
        @include btn-lb-lt($val);
    }

    .btn-db-dt.bg--#{$key}{
        @include btn-db-dt($val);
    }

    

}


$displays: flex, block, inline-block, inline, grid;
    @each $display in $displays {
        .d{
            &--#{$display}{
                display: $display;
            }
        }

    }

    $align: (
        "center": center,
        "right": right,
        "left": left,
        "justify": justify,
    );

@each $key, $val in $align{
    .align{
        &--#{$key}{
            align-items: $val;
        }
    }

    .text{
        &--#{$key}{
            text-align: $val;
        }
    }
}

$justify :(
    "start": flex-start,
    "center": center,
    "end": flex-end,
    "between": space-between,
    "around": space-around,
);

@each $key, $val in $justify{
    .justify{
        &--#{$key}{
            justify-content: $val;
        }
    }
}

@for $i from 1 through 20{
    .py--#{$i}{
        padding: $i + rem 0;
    }
    .px--#{$i}{
        padding: 0 + $i rem;
    }
    .mt--#{$i}{
        margin-top: $i + rem;
    }
    .mb--#{$i}{
        margin-bottom: $i + rem;
    }

}